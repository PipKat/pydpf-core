"""Autogenerated DPF operator classes.

Created on 10/06/2021, 13:12:29
"""
from collections import OrderedDict
from collections import namedtuple
from ansys.dpf import core as dpf

InputSpec = namedtuple('InputSpec', ['document', 'ellipsis', 'name', 'optional',
                                     'type_names'])

OutputSpec = namedtuple('OutputSpec', ['name', 'type_names', 'document'])


class ExternalLayer(dpf.Operator):
    """DPF "meshed_external_layer_sector" Operator

    Extracts the external layer (thick skin) of the mesh (3D elements)
    in a new meshed region

    Available inputs:
     -   mesh : MeshedRegion
    Available outputs:
     -   nodes_mesh_scoping
     -   elements_mesh_scoping
     -   mesh


    Parameters
    ----------
    mesh : MeshedRegion




    Examples
    --------
    >>> op = dpf.operators.ExternalLayer()
    >>> op.inputs.mesh.connect(my_mesh)
    >>> my_nodes_mesh_scoping = op.outputs.nodes_mesh_scoping()
    >>> my_elements_mesh_scoping = op.outputs.elements_mesh_scoping()
    >>> my_mesh = op.outputs.mesh()
    """  # noqa: E501

    class _Inputs(dpf.inputs.Inputs):

        # fmt: off
        _spec = OrderedDict([(0, InputSpec(document='', ellipsis=False, name='mesh', optional=False, type_names=['abstract_meshed_region']))]) # noqa: E501
        # fmt: on

        def __init__(self, oper):
            self._mesh = None
            super().__init__(self._spec, oper)

        @property
        def mesh(self):
            return self._mesh

        @mesh.setter
        def mesh(self, mesh):
            self._mesh.connect(mesh)

    class _Outputs(dpf.outputs.Outputs):

        # fmt: off
        _spec = OrderedDict([(0, OutputSpec(name='mesh', type_names=['abstract_meshed_region'], document='')), (1, OutputSpec(name='nodes_mesh_scoping', type_names=['scoping'], document='')), (2, OutputSpec(name='elements_mesh_scoping', type_names=['scoping'], document=''))]) # noqa: E501
        # fmt: on

        def __init__(self, oper):
            self._mesh = None
            self._nodes_mesh_scoping = None
            self._elements_mesh_scoping = None
            super().__init__(self._spec, oper)

        @property
        def mesh(self):
            return self._mesh

        @property
        def nodes_mesh_scoping(self):
            return self._nodes_mesh_scoping

        @property
        def elements_mesh_scoping(self):
            return self._elements_mesh_scoping

    def __init__(self, mesh):
        if channel is None:
            channel = dpf.server._global_channel()

        self._channel = channel
        self._stub = self._connect()
        self._message = None
        self._description = None
        self.name = "meshed_external_layer_sector"

        self._Operator__send_init_request()

        self.inputs = self._Inputs(self)
        self.outputs = self._Outputs(self)

    @property
    def mesh(self):
        return self.outputs._mesh

    @property
    def nodes_mesh_scoping(self):
        return self.outputs._nodes_mesh_scoping

    @property
    def elements_mesh_scoping(self):
        return self.outputs._elements_mesh_scoping
